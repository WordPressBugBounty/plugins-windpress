import{c as m}from"../../../../build-Bay8NolM.js";import{d as f}from"../../../../vfs-CGMWRCWv.js";import{I as w}from"../../../../instrumentation-Irm8AyQm.js";import"../../../../index-CPcXZEQS.min.js";import"../../../../chunk-HTB5LLOP-Cay67bh1.min.js";import"../../../../index-D2oXBU75.min.js";import"../../../../index-BAMY2Nnw.min.js";import"../../../../cssesc-Bxt4z7kp.js";import"../../../../preload-helper-OxAS765g.min.js";import"../../../../source-map-generator-DjbDy59a.min.js";import"../../../../index-CgqXENQe.min.js";import"../../../../index-CgZLPLHO.min.js";import"../../../../pre-process-CANs1e39.js";import"../../../../remapping.umd-DpixvR31.min.js";console.warn("The compiler of Tailwind CSS should not be used in production. To use Tailwind CSS in production, use the cached CSS: https://wind.press/docs/guide/concepts/cache");let l=new Set,d=document.createElement("style"),u=Promise.resolve(),y=1,r=new w,s="",o;async function b(){r.start("Create compiler"),r.start("Reading VFS");let t=document.querySelector('script#windpress\\:vfs[type="text/plain"]');if(!t)throw new Error('Script element with id "windpress:vfs" and type "text/plain" not found.');let e=(t==null?void 0:t.textContent)||"";if(r.end("Reading VFS",{size:e.length,changed:s!==e}),s!==e){s=e,r.start("Compile CSS");try{o=await m({entrypoint:"/main.css",volume:f(s||"e30=")})}finally{r.end("Compile CSS"),r.end("Create compiler")}l.clear()}}async function h(t){if(!o)return;let e=new Set;r.start("Collect classes");for(let i of document.querySelectorAll("[class]"))for(let n of i.classList)l.has(n)||(l.add(n),e.add(n));r.end("Collect classes",{count:e.size}),!(e.size===0&&t==="incremental")&&(r.start("Build utilities"),d.textContent=o.build(Array.from(e)),r.end("Build utilities"))}function a(t){async function e(){if(!o&&t!=="full")return;let i=y++;r.start(`Build #${i} (${t})`),t==="full"&&await b(),r.start("Build"),await h(t),r.end("Build"),r.end(`Build #${i} (${t})`)}u=u.then(e).catch(i=>r.error(i))}let S=new MutationObserver(()=>a("full"));function v(t){S.observe(t,{attributes:!0,attributeFilter:["type","src"],characterData:!0,subtree:!0,childList:!0})}const p=new MutationObserver(t=>{let e=0,i=0;for(let n of t){for(let c of n.addedNodes)c.nodeType===1&&c!==d&&i++;n.type==="attributes"&&i++,n.target instanceof HTMLScriptElement&&n.target.id==="windpress:vfs"&&n.target.type==="text/plain"&&(v(n.target),e++)}if(e>0)return a("full");if(i>0)return a("incremental")});window.__windpress__disable_playObserver?console.warn("Play Observer is disabled."):(p.observe(document.documentElement,{attributes:!0,attributeFilter:["class"],childList:!0,subtree:!0}),a("full"),document.head.append(d)),new BroadcastChannel("windpress").addEventListener("message",async t=>{const e=t.data;if(e.source==="windpress/dashboard"&&e.target==="windpress/observer"&&e.task==="windpress.code-editor.saved"){let i=document.querySelector('script#windpress\\:vfs[type="text/plain"]');i&&(i.textContent=e.payload.volume)}});try{window.twPlayObserver=p}catch{}
