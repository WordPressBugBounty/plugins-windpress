import{d as w}from"./vfs-D2UpcTQ4.js";import{c as v,o as $}from"./build-CJdSsVSr.js";import{f as m,m as x,__tla as j}from"./index-BUCU5woC.min.js";import{a as L,g as S,n as k,s as C}from"./intellisense-CjmsPEni.js";import{l as P,__tla as W}from"./cssesc-prnZiDuv.js";import{c as E,a as D,__tla as V}from"./worker-DuwNrzuJ.js";import{l as b}from"./design-system-CcmRQNoL.js";import"./index-C5HG4pYD.min.js";import"./index-BAMY2Nnw.min.js";import"./index-Dd1Fq7mF.min.js";import"./chunk-HTB5LLOP-Cay67bh1.min.js";import{__tla as q}from"./index-dO2_67iC.min.js";import"./preload-helper-CsYsLKPR.min.js";import"./pre-process-BDoklHHK.js";import"./index-CKIe3sfe.min.js";import"./index-CgqXENQe.min.js";import"./index-BkiRcEwW.min.js";import"./source-map-generator-DjbDy59a.min.js";import"./runtime-core.esm-bundler-Cyr_sIeO.min.js";import"./isObject-K1YoVIH1.min.js";import"./index.browser-B0na17u1.min.js";import"./index-BWcrFNHu.min.js";import"./redaxios.module-D8m3meIN.min.js";import"./index-BQgNu2nd.min.js";import"./get-DBhW7rda.min.js";import"./_toKey-BxB36GnB.min.js";let l,z=Promise.all([(()=>{try{return j}catch{}})(),(()=>{try{return W}catch{}})(),(()=>{try{return V}catch{}})(),(()=>{try{return q}catch{}})()]).then(async()=>{var u=/^(@[^\/]+\/[^@\/]+)(?:@([^\/]+))?(\/.*)?$/,d=/^([^@\/]+)(?:@([^\/]+))?(\/.*)?$/;function f(r){const a=u.exec(r)||d.exec(r);if(!a)throw new Error(`[parse-package-name] invalid package name: ${r}`);return{name:a[1]||"",version:a[2]||"latest",path:a[3]||""}}l=async function(r){const a=E();let s=[];const n=r.map(async t=>{if(t.negated)return;let e;if(t.pattern.startsWith("jsdelivr:")?(e=a.add({message:`Loading source: jsDelivr (${t.pattern})`,type:"info",group:"source"}),s.push(...await h(t))):t.pattern.startsWith("http")?(e=a.add({message:`Loading source: Network (${t.pattern})`,type:"info",group:"source"}),s.push(...await g(t))):t.pattern.startsWith("wp-content:")&&(e=a.add({message:`Loading source: WP Content (${t.pattern})`,type:"info",group:"source"}),s.push(...await _(t))),e){let p=a.logs.value.find(y=>y.id===e);p&&(p.message+=" - done")}});await Promise.all(n);const o=[];let c=a.add({message:"Scanning sources...",type:"info",group:"source"});s.forEach(t=>{const e=m(t);o.push(...e)});let i=a.logs.value.find(t=>t.id===c);return i&&(i.message+=" - done"),Array.from(new Set(o))};async function h(r){const a=[];let s=r.pattern.slice(9),{name:n,version:o,path:c}=f(s);const i=(await fetch(`https://data.jsdelivr.com/v1/packages/npm/${n}@${o}?structure=flat`).then(t=>t.json()).then(t=>t.files).then(t=>t.map(e=>e.name)).then(t=>t.filter(e=>x(e,c)))).map(async t=>{let e=await fetch(`https://cdn.jsdelivr.net/npm/${n}@${o}${t}`).then(p=>p.text());a.push(e)});return await Promise.all(i),a}async function g(r){return[await fetch(r.pattern).then(a=>a.text())]}async function _(r){let a=r.pattern.slice(11);return(await D().post("admin/local-file-provider/scan",{path:a}).then(s=>s.data)).contents.map(s=>s.content)}});export{z as __tla,v as compile,w as decodeVFSContainer,m as find_tw_candidates,L as getClassList,S as getVariableList,b as loadDesignSystem,P as loadModule,l as loadSource,k as naturalExpand,$ as optimize,C as sortClasses};
